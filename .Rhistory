map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()
View(empty_df_list)
View(empty_df_list)
for (i in 1:de_length){
empty_df_list[[i]]<-map(venueslist_de2[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()}
View(empty_df_list)
View(empty_df_list)
View(venueslist_de2)
View(venueslist_de2)
tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="DE",
"locale"="*",
'size'=1000)) %>% content
#define a function for requesting data
requester <-function(pages){
#enforce a rate limit
Sys.sleep(0.2)
#call the api an get the respective page
requ_page <- tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="DE",
"locale"="*",
'page'=pages,
'size'=100)) %>% content
#return the search items in a list
requ_page <-requ_page$`_embedded`$venues
}
#define a function for requesting data
requester <-function(pages){
#enforce a rate limit
Sys.sleep(0.2)
#call the api an get the respective page
requ_page <- tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="DE",
"locale"="*",
'page'=pages,
'size'=1000)) %>% content
#return the search items in a list
requ_page <-requ_page$`_embedded`$venues
}
tickets_de2 <-requester(0)
#exctract variable names
tickets_df1<-map(tickets_de2,~.x)
varnames=colnames(tickets_df1)
total_pages<-as.numeric(tickets_de$page$totalPages)
pagesize<-as.numeric(tickets_de$page$size)
tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="DE",
"locale"="*",
'size'=499)) %>% content
#define a function for requesting data
requester <-function(pages){
#enforce a rate limit
Sys.sleep(0.2)
#call the api an get the respective page
requ_page <- tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="DE",
"locale"="*",
'page'=pages,
'size'=499)) %>% content
#return the search items in a list
requ_page <-requ_page$`_embedded`$venues
}
tickets_de2 <-requester(0)
#exctract variable names
tickets_df1<-map(tickets_de2,~.x)
varnames=colnames(tickets_df1)
total_pages<-as.numeric(tickets_de$page$totalPages)
pagesize<-as.numeric(tickets_de$page$size)
tickets_df1 <- map(tickets_de2, as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows() %>%
select(c('name','name.1','line1','location.longitude','location.latitude','url','postalCode'))%>%
rename(city = name.1,
address = line1,
latitude = location.latitude,
longitude = location.longitude)
#get all pages for venues in Germany
venueslist_de<-map(0:total_pages,requester)
venueslist_de2<-venueslist_de[-which(sapply(venueslist_de, is.null))] #removing all list entries where list type is null
de_length<-as.numeric(length(venueslist_de2))
empty_df_list <- list()
for (i in 1:de_length){
empty_df_list[[i]]<-data.frame()
}
for (i in 1:de_length){
empty_df_list[[i]]<-map(venueslist_de2[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()}
View(empty_df_list)
View(empty_df_list)
View(venueslist_de2)
tickets_df1<-map(tickets_de2,~.x)
varnames=colnames(tickets_df1)
empty_df_list <- list()
for (i in 1:de_length){
empty_df_list[[i]]<-data.frame()
}
for (i in 1:de_length){
empty_df_list[[i]]<-map_df(venueslist_de2[[i]], as.data.frame) %>%
map_df(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()}
empty_df_list <- list()
for (i in 1:de_length){
empty_df_list[[i]]<-data.frame()
}
for (i in 1:de_length){
empty_df_list[[i]]<-map_df(venueslist_de2[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()}
View(empty_df_list)
View(empty_df_list)
empty_df_list[[1]]<-map_df(venueslist_de2[[1]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()
empty_df_list[[1]]<-map_df(venueslist_de2[[1]], as.data.frame) %>%
bind_rows()
for (i in 1:de_length){
empty_df_list[[i]]<-map_df(venueslist_de2[[i]], as.data.frame) %>%
bind_rows()}
View(empty_df_list)
View(empty_df_list)
empty_df_list[[1]]<-map_df(venueslist_de2[[1]], as.data.frame) %>%
bind_rows()
for (i in 1:de_length){
empty_df_list[[i]]<-map_df(venueslist_de2[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>%
bind_rows()}
empty_df_list <- list()
View(venueslist_de2)
View(venueslist_de2)
tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="DE",
"locale"="*",
'size'=20)) %>% content
#define a function for requesting data
requester <-function(pages){
#enforce a rate limit
Sys.sleep(0.2)
#call the api an get the respective page
requ_page <- tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="DE",
"locale"="*",
'page'=pages,
'size'=20)) %>% content
#return the search items in a list
requ_page <-requ_page$`_embedded`$venues
}
View(tickets_de2)
View(tickets_de2)
View(tickets_de2)
View(tickets_de2)
#exctract variable names
tickets_de2[[1]]
#exctract variable names
oneliner<-map(tickets_de2[[1]],~.x)
View(oneliner)
View(oneliner)
#exctract variable names
oneliner<-map_df(tickets_de2[[1]],~.x)
#exctract variable names
oneliner<-map(tickets_de2[[1]],~.x)%>% data.frame()
for (i in 1:20){
empty_df_list[[i]]<-data.frame()
}
empty_df_list[[1]]<-map(tickets_de2[[1]],~.x)%>% data.frame()
View(empty_df_list)
View(empty_df_list)
for(i in 2:20){
empty_df_list[[i]]<-map(tickets_de2[[i]],~.x)%>% data.frame()
}
View(empty_df_list)
View(empty_df_list)
empty_df<-list.stack(empty_df_list)
empty_df<-list.stack(empty_df_list,fill=TRUE)
length(venueslist_de2[[26]])
length(venueslist_de2[[1:26]])
length(venueslist_de)
empty_df_list <- list()
elementno <- list()
for (i in 1:length(venueslist_de2)){
elementno[i]<-length(venueslist_de2[[i]])
}
View(elementno)
sum(elementno)
elementno<- as.vector(elementno)
sum(elementno)
View(elementno)
elementno <- c()
for (i in 1:length(venueslist_de2)){
elementno[i]<-length(venueslist_de2[[i]])
}
sum(elementno)
tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="DE",
"locale"="*",
'size'=20)) %>% content
elements<-as.numeric(tickets_de$page$totalElements)
#define a function for requesting data
requester <-function(pages){
#enforce a rate limit
Sys.sleep(0.2)
#call the api an get the respective page
requ_page <- tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="DE",
"locale"="*",
'page'=pages,
'size'=499)) %>% content #increasing to 499 per page so every element can be caught
#return the search items in a list
requ_page <-requ_page$`_embedded`$venues
}
#get all pages for venues in Germany
venueslist_de<-map(0:total_pages,requester)
venueslist_de2<-venueslist_de[-which(sapply(venueslist_de, is.null))] #removing all list entries where list type is null
de_length<-as.numeric(length(venueslist_de2))
tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="DE",
"locale"="*",
'size'=499)) %>% content
total_pages<-as.numeric(tickets_de$page$totalPages)
pagesize<-as.numeric(tickets_de$page$size)
elements<-as.numeric(tickets_de$page$totalElements)
#get all pages for venues in Germany
venueslist_de<-map(0:total_pages,requester)
venueslist_de2<-venueslist_de[-which(sapply(venueslist_de, is.null))] #removing all list entries where list type is null
de_length<-as.numeric(length(venueslist_de2))
for(i in 1:de_length){
venues_quant[i]<-length(venueslist_de2[[i]])
}
#determine number of venues
venues_quant=c()
for(i in 1:de_length){
venues_quant[i]<-length(venueslist_de2[[i]])
}
sum(venues_quant)
venues_quant=sum(venues_quant)
#create a list of data frames
venues_df_list<- list()
for (i in 1:venues_quant){
venues_df_list<- data.frame()
}
venues_df_list[i]<- data.frame()
for (i in 1:venues_quant){
venues_df_list[i]<- data.frame()
}
for (i in 1:venues_quant){
venues_df_list[[i]]<- data.frame()
}
View(venueslist_de2)
View(venueslist_de2)
#
venueslist_de2[[1]][[1]]
#
oneliner<-map(venueslist_de2[[1]][[1]])
#
oneliner<-map(venueslist_de2[[1]][[1]],~.x)
#
oneliner<-map(venueslist_de2[[1]][[1]],~.x) %>% as.data.frame()
#
oneliner<-map(venueslist_de2[[26]][[1]],~.x) %>% as.data.frame()
#
oneliner<-map(venueslist_de2[[26]][[200]],~.x) %>% as.data.frame()
#
oneliner<-map(venueslist_de2[[26]][[300]],~.x) %>% as.data.frame()
#
length_26<-length(venueslist_de2[[26]])
#
length_26<-as.numeric(length(venueslist_de2[[26]]))
for (i in 1:length()){
empty_df_list[[i]]<-data.frame()
}
for (i in 1:length_26){
empty_df_list[[i]]<-data.frame()
}
for (i in 1:length_26){
empty_df_list[[i]]<-map(venueslist_de2[[26]][[300]],~.x) %>% as.data.frame()
}
View(empty_df_list)
View(empty_df_list)
View(venueslist_de2)
View(venueslist_de2)
View(empty_df_list)
View(empty_df_list)
empty_df<-list.stack(empty_df_list,fill=TRUE))
empty_df<-list.stack(empty_df_list,fill=TRUE)
View(empty_df)
View(empty_df)
for (i in 1:length_26){
empty_df_list[[i]]<-map(venueslist_de2[[26]][[i]],~.x) %>% as.data.frame()
}
View(empty_df_list)
View(empty_df_list)
for (i in 1:length_26){
empty_df_list[[i]]<-map_df(venueslist_de2[[26]][[i]],~.x) %>% as.data.frame()
}
empty_df_list[[i]]<-map_df(venueslist_de2[[26]][[i]],~.x)
empty_df_list[[i]]<-map(venueslist_de2[[26]][[i]],~.x)
for (i in 1:length_26){
empty_df_list[[i]]<-map(venueslist_de2[[26]][[i]],~.x)
}
View(empty_df_list)
View(empty_df_list)
empty_df<-list.stack(empty_df_list,fill=TRUE)
View(empty_df)
View(empty_df)
empty_df<-empty_df%>% distinct()
View(empty_df)
View(empty_df)
empty_df<-empty_df%>%
?distinct
empty_df<-empty_df%>% distinct(name)
View(empty_df)
View(empty_df)
#
empty_df_list <- list()
for (i in 1:length_26){
empty_df_list[[i]]<-data.frame()
}
length_26<-as.numeric(length(venueslist_de2[[26]]))
for (i in 1:length_26){
empty_df_list[[i]]<-map(venueslist_de2[[26]][[i]],~.x)
}
empty_df<-list.stack(empty_df_list,fill=TRUE)
View(empty_df)
View(empty_df)
varnames_e<-colnames(empty_df)
empty_df<-empty_df%>% distinct(varnames_e)
empty_df[!duplicated(empty_df[,1:18]),]
empty_df<-empty_df[!duplicated(empty_df[,1:18]),]
empty_df<-empty_df %>% distinct(c(1:18))
empty_df<-empty_df %>% distinct(c(1))
#
empty_df_list <- list()
for (i in 1:length_26){
empty_df_list[[i]]<-data.frame()
}
length_26<-as.numeric(length(venueslist_de2[[26]]))
for (i in 1:length_26){
empty_df_list[[i]]<-map(venueslist_de2[[26]][[i]],~.x)
}
empty_df<-list.stack(empty_df_list,fill=TRUE)
varnames_e<-colnames(empty_df)
empty_df<-empty_df %>% distinct(c(1))
#
empty_df_list <- list()
for (i in 1:length_26){
empty_df_list[[i]]<-data.frame()
}
length_26<-as.numeric(length(venueslist_de2[[26]]))
for (i in 1:length_26){
empty_df_list[[i]]<-map(venueslist_de2[[26]][[i]],~.x)
}
empty_df<-list.stack(empty_df_list,fill=TRUE)
varnames_e<-colnames(empty_df)
empty_df<-empty_df %>% distinct(c(name, type, id))
empty_df<-empty_df %>% distinct(name)
empty_df<-sort(empty_df_list,key=length)
empty_df<-empty_df_list[order(sapply(empty_df_list, length))]
View(empty_df_list)
View(empty_df)
empty_df<-empty_df_list[rev(order(sapply(empty_df_list, length)))]
View(empty_df)
View(empty_df)
empty_df<-list.stack(empty_df_list,fill=TRUE)
empty_df<-empty_df_list[rev(order(sapply(empty_df_list, length)))]
empty_df<-bind_rows(empty_df_list,fill=TRUE)
empty_df<-empty_df_list[rev(order(sapply(empty_df_list, length)))]
empty_df <- map(empty_df_list, tibble) %>%
bind_rows()
empty_df <- map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows() %>%
?distinct
empty_df <- map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows() %>%
```
empty_df<-empty_df_list[rev(order(sapply(empty_df_list, length)))]
empty_df_list <- lapply(venueslist_de2, as.data.frame)
empty_df_list <- lapply(empty_df, as.data.frame)
empty_df<-empty_df_list[rev(order(sapply(empty_df_list, length)))]
empty_df_list <- lapply(empty_df, as.data.frame)
empty_df_list <- lapply(empty_df_list, tidyr::complete, fill = NA)
empty_df_list <- lapply(empty_df, as.data.frame)
empty_df<-empty_df_list[rev(order(sapply(empty_df_list, length)))]
empty_df_list <- lapply(empty_df, as.data.frame)
View(venueslist_de2)
View(empty_df)
View(empty_df)
empty_df_list[[1]]
as.data.frame(empty_df[[1]])
as.data.frame(empty_df[[100]])
empty_df[[1]]<-as.data.frame(empty_df[[1]])
View(empty_df)
View(empty_df)
for (i in length_26){
empty_df[[i]]<-as.data.frame(empty_df[[i]])
}
View(empty_df)
View(empty_df)
for (i in length_26){
empty_df[[i]]<-as.data.frame(empty_df[[i]])
}
View(empty_df)
View(empty_df)
for (i in i:length_26){
empty_df[[i]]<-as.data.frame(empty_df[[i]])
}
View(empty_df)
View(empty_df)
for (i in 1:length(empty_df)){
empty_df[[i]]<-as.data.frame(empty_df[[i]])
}
#
venueslist_de3<-venueslist_de2[-26]
venues_df <- map(venueslist_de3[[1]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()
venues_df <- data.frame()
for (i in 1:25){
venues_df2<-map(venueslist_de3[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()
rbind(venues_df,venues_df2)
}
for (i in 1:25){
venues_df2<-map(venueslist_de3[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>%
bind_rows()
rbind(venues_df,venues_df2)
}
venues_df <- data.frame()
for (i in 1:25){
venues_df2<-map(venueslist_de3[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>%
bind_rows()
venues_df<-rbind(venues_df,venues_df2)
}
for (i in 1:25){
venues_df2<-map_dfr(venueslist_de3[[i]],complete,fill=list(col=NA))
venues_df<-rbind(venues_df,venues_df2)
}
for (i in 1:25){
venues_df2 <- as.data.frame(venueslist_de3[[i]])
venues_df2 <- complete(tibble(venues_df2),fill=list(col=NA))
venues_df <- rbind(venues_df, venues_df2)
}
venues_df1 <- map(venueslist_de3[[1]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()
venues_df2 <- map(venueslist_de3[[2]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()
venues_df3 <- map(venueslist_de3[[3]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()
venues_df <- map(venueslist_de3[[1]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows() select(c('name','name.1','line1','location.longitude','location.latitude','url','postalCode'))%>%
venues_df <- map(venueslist_de3[[1]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()%>%
select(c('name','name.1','line1','location.longitude','location.latitude','url','postalCode'))%>%
rename(city = name.1,
address = line1,
latitude = location.latitude,
longitude = location.longitude)
for (i in 1:25){
venues_df2<-map(venueslist_de3[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()select(c('name','name.1','line1','location.longitude','location.latitude','url','postalCode'))%>%
for (i in 1:25){
venues_df2<-map(venueslist_de3[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()%>%
select(c('name','name.1','line1','location.longitude','location.latitude','url','postalCode'))%>%
rename(city = name.1,
address = line1,
latitude = location.latitude,
longitude = location.longitude)
venues_df<-rbind(venues_df,venues_df2)
}
View(venues_df)
View(venues_df)
venues_names<-venues_df$name
venues_names<-venues_df$name %>% distinct()
venues_names<-venues_df
venues_names<- venues_df%>% distinct()
venues_names<- venues_df%>% distinct(names)
venues_names<-venues_df
venues_names<- venues_df%>% distinct(names)
venues_names<- venues_df%>% distinct()
venues_df<-venues_df%>% distinct()
head(venues_df)
ggplot() +
borders("world", "Germany", colour = "black", fill = "grey90") +
theme_void() +
coord_quickmap() +
labs(title = "Event locations across Germany",
caption = "Source: ticketmaster.com") +
theme(title = element_text(size=8, face='bold'),
plot.caption = element_text(face = "italic"))
