geom_point(mapping = aes(x=longitude,y=latitude))
borders("world", "Germany", colour = "black", fill = "grey90") +
theme_void() +
coord_quickmap() +
labs(title = "Event locations across Germany",
caption = "Source: ticketmaster.com") +
theme(title = element_text(size=8, face='bold'),
plot.caption = element_text(face = "italic"))
ggplot(data = venues_df) +
geom_point(mapping = aes(x=longitude,y=latitude))+
borders("world", "Germany", colour = "black", fill = "grey90") +
theme_void() +
coord_quickmap() +
labs(title = "Event locations across Germany",
caption = "Source: ticketmaster.com") +
theme(title = element_text(size=8, face='bold'),
plot.caption = element_text(face = "italic"))
ggplot(data = venues_df) +
borders("world", "Germany", colour = "black", fill = "grey90") +
theme_void() +
coord_quickmap() +
geom_point(mapping = aes(x=longitude,y=latitude))+
labs(title = "Event locations across Germany",
caption = "Source: ticketmaster.com") +
theme(title = element_text(size=8, face='bold'),
plot.caption = element_text(face = "italic"))
venues_df$longitude<-venues_df$longitude  %>% as.numeric()
head(venues_df)
venues_df$latitude<-venues_df$latitude  %>% as.numeric()
head(venues_df)
ggplot(data = venues_df) +
borders("world", "Germany", colour = "black", fill = "grey90") +
theme_void() +
coord_quickmap() +
geom_point(mapping = aes(x=longitude,y=latitude))+
labs(title = "Event locations across Germany",
caption = "Source: ticketmaster.com") +
theme(title = element_text(size=8, face='bold'),
plot.caption = element_text(face = "italic"))
venues_df$longitude[venues_df$longitude>15.042]<-NA
venues_df$longitude[venues_df$longitude>15.042]<-NA
venues_df$longitude[venues_df$longitude<5.886]<-NA
venues_df$latitude[veneues_df$latitude>55.059]<-NA
venues_df$longitude[venues_df$longitude>15.042]<-NA
venues_df$longitude[venues_df$longitude<5.886]<-NA
venues_df$latitude[venues_df$latitude>55.059]<-NA
venues_df$latitude[veneues_df$latitude<47270]<-NA
venues_df$longitude[venues_df$longitude>15.042]<-NA
venues_df$longitude[venues_df$longitude<5.886]<-NA
venues_df$latitude[venues_df$latitude>55.059]<-NA
venues_df$latitude[venues_df$latitude<47270]<-NA
happy2017$Country[happy2017$Country == 'Hong Kong S.A.R., China'] <-
'Hong Kong'
venues_df$longitude[venues_df$longitude>15.042]<-NA
venues_df$longitude[venues_df$longitude<5.886]<-NA
venues_df$latitude[venues_df$latitude>55.059]<-NA
venues_df$latitude[venues_df$latitude<47270]<-NA
ggplot(data = venues_df) +
borders("world", "Germany", colour = "black", fill = "grey90") +
theme_void() +
coord_quickmap() +
geom_point(mapping = aes(x=longitude,y=latitude))+
labs(title = "Event locations across Germany",
caption = "Source: ticketmaster.com") +
theme(title = element_text(size=8, face='bold'),
plot.caption = element_text(face = "italic"))
head(venues_df)
venues_df<-data.frame()
for (i in 1:25){
venues_df2<-map(venueslist_de3[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()%>%
select(c('name','name.1','line1','location.longitude','location.latitude','url','postalCode'))%>%
rename(city = name.1,
address = line1,
latitude = location.latitude,
longitude = location.longitude)
venues_df<-rbind(venues_df,venues_df2)
}
venues_df<-venues_df%>% distinct()
venues_df$latitude<-venues_df$latitude  %>% as.numeric()
venues_df$longitude<-venues_df$longitude  %>% as.numeric()
head(venues_df)
venues_df$longitude[venues_df$longitude>15.042]<-NA
venues_df$longitude[venues_df$longitude<5.886]<-NA
venues_df$latitude[venues_df$latitude>55.059]<-NA
venues_df$latitude[venues_df$latitude<47270]<-NA
head(venues_df)
#get all pages for venues in Germany
venueslist_de<-map(0:total_pages,requester)
venueslist_de2<-venueslist_de[-which(sapply(venueslist_de, is.null))] #removing all list entries where list type is null
de_length<-as.numeric(length(venueslist_de2))
#dropped the 26th page, because it caused Problems I could not find a solution for
venueslist_de3<-venueslist_de2[-26]
venues_df<-data.frame()
for (i in 1:25){
venues_df2<-map(venueslist_de3[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()%>%
select(c('name','name.1','line1','location.longitude','location.latitude','url','postalCode'))%>%
rename(city = name.1,
address = line1,
latitude = location.latitude,
longitude = location.longitude)
venues_df<-rbind(venues_df,venues_df2)
}
venues_df<-venues_df%>% distinct()
venues_df$latitude<-venues_df$latitude  %>% as.numeric()
venues_df$longitude<-venues_df$longitude  %>% as.numeric()
head(venues_df)
ggplot(data = venues_df) +
borders("world", "Germany", colour = "black", fill = "grey90") +
theme_void() +
coord_quickmap() +
geom_point(mapping = aes(x=longitude,y=latitude))+
labs(title = "Event locations across Germany",
caption = "Source: ticketmaster.com") +
theme(title = element_text(size=8, face='bold'),
plot.caption = element_text(face = "italic"))
venues_df2<-venues_df2
venues_df2$longitude[venues_df2$longitude>15.042]<-NA
venues_df2$longitude[venues_df2$longitude<5.886]<-NA
venues_df2$latitude[venues_df2$latitude<55.059]<-NA
venues_df2$latitude[venues_df2$latitude>47270]<-NA
venues_df2
venues_df2<-venues_df
venues_df2$longitude[venues_df2$longitude>15.042]<-NA
venues_df2$longitude[venues_df2$longitude<5.886]<-NA
venues_df2$latitude[venues_df2$latitude<55.059]<-NA
venues_df2$latitude[venues_df2$latitude>47270]<-NA
venues_df2
venues_df2<-venues_df
venues_df2$longitude[venues_df2$longitude>15.042]<-NA
venues_df2$longitude[venues_df2$longitude<5.886]<-NA
venues_df2$latitude[venues_df2$latitude>55.059]<-NA
venues_df2$latitude[venues_df2$latitude<47.270]<-NA
venues_df2
ggplot(data = venues_df) +
borders("world", "Germany", colour = "black", fill = "grey90") +
theme_void() +
coord_quickmap() +
geom_point(mapping = aes(x=longitude,y=latitude))+
labs(title = "Event locations across Germany",
caption = "Source: ticketmaster.com") +
theme(title = element_text(size=8, face='bold'),
plot.caption = element_text(face = "italic"))
ggplot(data = venues_df2) +
borders("world", "Germany", colour = "black", fill = "grey90") +
theme_void() +
coord_quickmap() +
geom_point(mapping = aes(x=longitude,y=latitude))+
labs(title = "Event locations across Germany",
caption = "Source: ticketmaster.com") +
theme(title = element_text(size=8, face='bold'),
plot.caption = element_text(face = "italic"))
#adjust the requester function
requester2 <-function(pages){
#enforce a rate limit
Sys.sleep(0.2)
#call the api an get the respective page
requ_page <- tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="CH",
"locale"="*",
'page'=pages,
'size'=499)) %>% content #increasing to 499 per page so every element can be caught
#return the search items in a list
requ_page <-requ_page$`_embedded`$venues
}
tickets_ch <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="CH",
"locale"="*",
'size'=20)) %>% content
total_pagesch<-as.numeric(tickets_de$page$totalPages)
pagesizech<-as.numeric(tickets_de$page$size)
elementsch<-as.numeric(tickets_de$page$totalElements)
total_pagesch<-as.numeric(tickets_ch$page$totalPages)
pagesizech<-as.numeric(tickets_ch$page$size)
elementsch<-as.numeric(tickets_ch$page$totalElements)
total_pages_ch<-as.numeric(tickets_ch$page$totalPages)
pagesize_ch<-as.numeric(tickets_ch$page$size)
elements_ch<-as.numeric(tickets_ch$page$totalElements)
#adjust the requester function
requester2 <-function(pages){
#enforce a rate limit
Sys.sleep(0.2)
#call the api an get the respective page
requ_page <- tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="CH",
"locale"="*",
'page'=pages,
'size'=499)) %>% content #increasing to 499 per page so every element can be caught
#return the search items in a list
total_pages_ch2<-as.numeric(requ_page$page$totalPages)
pagesize_ch2<-as.numeric(requ_page$page$size)
requ_page <-requ_page$`_embedded`$venues
}
#get all pages for venues in Germany
venueslist_ch<-map(0:total_pages_ch2,requester2)
#adjust the requester function
requester2 <-function(pages){
#enforce a rate limit
Sys.sleep(0.2)
#call the api an get the respective page
requ_page <- tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="CH",
"locale"="*",
'page'=pages,
'size'=499)) %>% content #increasing to 499 per page so every element can be caught
#return the search items in a list
requ_page <-requ_page$`_embedded`$venues
}
#getting an overview over the data
tickets_ch <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="CH",
"locale"="*",
'size'=499)) %>% content
total_pages_ch<-as.numeric(tickets_ch$page$totalPages)
pagesize_ch<-as.numeric(tickets_ch$page$size)
elements_ch<-as.numeric(tickets_ch$page$totalElements)
#get all pages for venues in Germany
venueslist_ch<-map(0:total_pages_ch2,requester2)
#get all pages for venues in Germany
venueslist_ch<-map(0:total_pages_ch,requester2)
venueslist_de2<-venueslist_de[-which(sapply(venueslist_de, is.null))] #removing all list entries where list type is null
de_length<-as.numeric(length(venueslist_de2))
#dropped the 26th page, because it caused Problems I could not find a solution for
venueslist_de3<-venueslist_de2[-26]
venues_df<-data.frame()
for (i in 1:25){
venues_df2<-map(venueslist_de3[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()%>%
select(c('name','name.1','line1','location.longitude','location.latitude','url','postalCode'))%>%
rename(city = name.1,
address = line1,
latitude = location.latitude,
longitude = location.longitude)
venues_df<-rbind(venues_df,venues_df2)
}
venues_df<-venues_df%>% distinct()
venues_df$latitude<-venues_df$latitude  %>% as.numeric()
venues_df$longitude<-venues_df$longitude  %>% as.numeric()
head(venues_df)
#adjust the requester function
requester2 <-function(pages){
#enforce a rate limit
Sys.sleep(0.2)
#call the api an get the respective page
requ_page <- tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="CH",
"locale"="*",
'page'=pages,)) %>% content #increasing to 499 per page so every element can be caught
#return the search items in a list
requ_page <-requ_page$`_embedded`$venues
}
#getting an overview over the data
tickets_ch <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="CH",
"locale"="*",
'size'=20)) %>% content
total_pages_ch<-as.numeric(tickets_ch$page$totalPages)
#get all pages for venues in Germany
venueslist_ch<-map(0:total_pages_ch,requester2)
#adjust the requester function
requester2 <-function(pages){
#enforce a rate limit
Sys.sleep(0.2)
#call the api an get the respective page
requ_page <- tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="CH",
"locale"="*",
'page'=pages)) %>% content #increasing to 499 per page so every element can be caught
#return the search items in a list
requ_page <-requ_page$`_embedded`$venues
}
#get all pages for venues in Germany
venueslist_ch<-map(0:total_pages_ch,requester2)
View(venueslist_ch)
View(venueslist_ch)
venueslist_ch2<-venueslist_ch[-which(sapply(venueslist_ch, is.null))] #removing all list entries where list type is null
ch_length<-as.numeric(length(venueslist_ch2))
#dropped the 26th page, because it caused Problems I could not find a solution for
#venueslist_de3<-venueslist_de2[-26]
venuesch_df<-data.frame()
for (i in 1:ch_length){
venuesch_df2<-map(venueslist_ch2[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()%>%
select(c('name','name.1','line1','location.longitude','location.latitude','url','postalCode'))%>%
rename(city = name.1,
address = line1,
latitude = location.latitude,
longitude = location.longitude)
venuesch_df<-rbind(venuesch_df,venuesch_df2)
}
for (i in 1:ch_length){
venuesch_df2<-map(venueslist_ch2[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()%>%
select(c('name','name.1','line1','location.longitude','location.latitude','url','postalCode'))%>%
rename(city = name.1,
address = line1,
latitude = location.latitude,
longitude = location.longitude)
venuesch_ch<-rbind(venuesch_df,venuesch_df2)
}
View(venuesch_df)
View(venuesch_df)
View(venuesch_df2)
View(venueslist_ch2)
#getting an overview over the data
tickets_ch <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="CH",
"locale"="*",
'size'=499)) %>% content
total_pages_ch<-as.numeric(tickets_ch$page$totalPages)
#get all pages for venues in Germany
venueslist_ch<-map(0:total_pages_ch,requester2)
View(venueslist_ch)
View(venueslist_ch)
#adjust the requester function
requester2 <-function(pages){
#enforce a rate limit
Sys.sleep(0.2)
#call the api an get the respective page
requ_page <- tickets_de <- GET('https://app.ticketmaster.com/discovery/v2/venues',
query=list("apikey"=ticketmaster_key,
"countryCode"="CH",
"locale"="*",
'page'=pages,
"size"=499)) %>% content #increasing to 499 per page so every element can be caught
#return the search items in a list
requ_page <-requ_page$`_embedded`$venues
}
#get all pages for venues in Germany
venueslist_ch<-map(0:total_pages_ch,requester2)
View(venueslist_ch)
View(venueslist_ch)
venueslist_ch2<-venueslist_ch[-which(sapply(venueslist_ch, is.null))] #removing all list entries where list type is null
ch_length<-as.numeric(length(venueslist_ch2))
#dropped the 26th page, because it caused Problems I could not find a solution for
#venueslist_de3<-venueslist_de2[-26]
venuesch_df<-data.frame()
for (i in 1:ch_length){
venuesch_df2<-map(venueslist_ch2[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()%>%
select(c('name','name.1','line1','location.longitude','location.latitude','url','postalCode'))%>%
rename(city = name.1,
address = line1,
latitude = location.latitude,
longitude = location.longitude)
venuesch_ch<-rbind(venuesch_df,venuesch_df2)
}
length(venueslist_ch2[[1]])
venueslist_ch3<-venueslist_ch2[[1]]
View(venueslist_ch3)
View(venueslist_ch3)
#dropped the 26th page, because it caused Problems I could not find a solution for
#venueslist_de3<-venueslist_de2[-26]
venuesch_df<-data.frame()
for (i in 1:length_ch){
venuesch_df2<-map(venueslist_ch3[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()%>%
select(c('name','name.1','line1','location.longitude','location.latitude','url','postalCode'))%>%
rename(city = name.1,
address = line1,
latitude = location.latitude,
longitude = location.longitude)
venuesch_ch<-rbind(venuesch_df,venuesch_df2)
}
length_ch<-length(venueslist_ch2[[1]])
venueslist_ch3<-venueslist_ch2[[1]]
for (i in 1:length_ch){
venuesch_df2<-map(venueslist_ch3[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()%>%
select(c('name','name.1','line1','location.longitude','location.latitude','url','postalCode'))%>%
rename(city = name.1,
address = line1,
latitude = location.latitude,
longitude = location.longitude)
venuesch_ch<-rbind(venuesch_df,venuesch_df2)
}
for (i in 1:length_ch){
venuesch_df2<-map(venueslist_ch3[[i]], as.data.frame) %>%
map(~ complete(tibble(.x),)) %>% #replaces missing columns with a NA
bind_rows()%>%
select(c('name','name.1','line1','location.longitude','location.latitude','url','postalCode'))%>%
rename(city = name.1,
address = line1,
latitude = location.latitude,
longitude = location.longitude)
venuesch_df<-rbind(venuesch_df,venuesch_df2)
}
View(venuesch_ch)
View(venuesch_ch)
View(venueslist_ch3)
View(venueslist_ch3)
names=list()
vektor1<-c()
vektor1[1]<-4
vektor[2]<-3
names<-list()
city<-list()
postal_Code<-list()
url <-list()
latitude<-list()
longitude<-list()
address<-list()
View(venueslist_ch)
View(venueslist_ch)
View(venueslist_ch3)
View(venueslist_ch3)
if ("name" in venueslist_ch3){
if ("name" %in% venueslist_ch3){
print('yes')
}
if ("name" %in% venueslist_ch3[[1]]){
print('yes')
}
'name' %in% venueslist_ch3[[1]]
View(venueslist_de3)
View(venueslist_de3)
View(venueslist_ch3)
View(venueslist_ch3)
name %in% venueslist_ch3[[1]]
venueslist_ch3[[1]]
venueslist_ch3[[1]]$name %in% venueslist_ch3[[1]]
if (venueslist_ch3[[1]]$name %in% venueslist_ch3[[1]]){
print('yes')
}
if (venueslist_ch3[[1]]$name %in% venueslist_ch3[[1]]){
names<- append(names,venueslist_ch3[[1]]$names)
}
if (venueslist_ch3[[1]]$name %in% venueslist_ch3[[1]]){
names<- append(names,venueslist_ch3[[1]]$names)
}
names<-list()
if (venueslist_ch3[[1]]$name %in% venueslist_ch3[[1]]){
names<- append(names,venueslist_ch3[[1]]$names)
}
names<-vextor("list",elements_ch)
names<-vector("list",elements_ch)
names[1]<-venueslist_ch3[[1]]$name)
names[1]<-venueslist_ch3[[1]]$name
View(names)
if (venueslist_ch3[[1]]$name %in% venueslist_ch3[[1]]){
names[1]<-venueslist_ch3[[1]]$name
} else{
names[1]<-NA
}
for (i in 1:elements_ch){
if (venueslist_ch3[[i]]$name %in% venueslist_ch3[[i]]){
names[i]<-venueslist_ch3[[i]]$name
} else{
names[i]<-NA
}}
View(names)
View(names)
names<-vector("list",elements_ch)
city<-vector("list",elements_ch)
postal_Code<-vector("list",elements_ch)
url <-vector("list",elements_ch)
latitude<-vector("list",elements_ch)
longitude<-vector("list",elements_ch)
address<-vector("list",elements_ch)
for (i in 1:elements_ch){
if (venueslist_ch3[[i]]$name %in% venueslist_ch3[[i]]){
names[i]<-venueslist_ch3[[i]]$name
} else{
names[i]<-NA
}}
for (i in 1:elements_ch) {
if (venueslist_ch3[[i]]$postalCode %in% venueslist_ch3[[i]]){
postal_Code<-venueslist_ch3[[i]]$postalCode
} else{
names<-NA
}
}
names<-vector("list",elements_ch)
for (i in 1:elements_ch){
if (venueslist_ch3[[i]]$name %in% venueslist_ch3[[i]]){
names[i]<-venueslist_ch3[[i]]$name
} else{
names[i]<-NA
}}
for (i in 1:elements_ch) {
if (venueslist_ch3[[i]]$postalCode %in% venueslist_ch3[[i]]){
postal_Code[i]<-venueslist_ch3[[i]]$postalCode
} else{
poatal_Code[i]<-NA
}
}
venueslist_ch3[[60]]$postalCode %in% venueslist_ch3[[60]]
for (i in 1:elements_ch) {
if (!is.null(venueslist_ch3[[i]]$postalCode)){
postal_Code[i]<-venueslist_ch3[[i]]$postalCode
} else{
poatal_Code[i]<-NA
}
postal_Code
